C51 COMPILER V9.01   LED                                                                   09/02/2018 09:36:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN led.OBJ
COMPILER INVOKED BY: E:\program\keil\C51\BIN\C51.EXE led.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #define DATA P0
   3          typedef unsigned char u8;
   4          typedef unsigned int u16;
   5          sbit seg_sel = P1^4;
   6          sbit bit_sel = P1^5;
   7          u8 code seg_tab[]= {0xc0, 0xf9, 0xa4, 0xb0, 
   8                                  0x99, 0x92, 0x82, 0xf8, 
   9                                  0x80, 0x90, 0x88, 0x83,
  10                                  0xc6, 0xa1, 0x86, 0x8e};
  11          u8 code bit_tab[] = {0x80, 0x40, 0x20, 0x10, 
  12                                          0x08, 0x04, 0x02, 0x01};
  13          void delay(u16 num)
  14          {
  15   1              u16 x, y;
  16   1              for(x=num; x>0; x--)
  17   1                      for(y=110; y>0; y--)
  18   1                      {
  19   2                              ;//延时1ms
  20   2                      }
  21   1      }
  22          void display_led(u8 whitch_bit, u8 which_number)
  23          {
  24   1              bit_sel = 1;
  25   1              DATA = bit_tab[whitch_bit];
  26   1              bit_sel = 0;
  27   1              delay(5);
  28   1              seg_sel = 1;
  29   1              DATA = seg_tab[which_number];
  30   1              seg_sel = 0;
  31   1              delay(5);
  32   1      }
  33          
  34          u8 key_scan(void)
  35          {
  36   1              u8 temp, temp2;
  37   1              P2 = 0xf0;//让P2输出0xf0
  38   1              temp = P2;
  39   1              if(temp != 0xf0)//当P2读入的值不等于这个数，延时
  40   1              {
  41   2                      delay(5);
  42   2                      temp = P2;
  43   2                      if(temp != 0xf0)//说明有按键按下
  44   2                      {
  45   3                              temp2 = temp & 0xf0;//保留高四位
  46   3                              P2 = 0x0f;//再让P2输出0x0f
  47   3                              delay(1);
  48   3                              temp = P2;//再读入值的低四位
  49   3                              temp2 |= temp;//保留低四位
  50   3                              return temp2;
  51   3                      }
  52   2                      //while(P2 != 0x0f);
  53   2              }
  54   1      }
  55          u8 encode(u8 cod)
C51 COMPILER V9.01   LED                                                                   09/02/2018 09:36:17 PAGE 2   

  56          {
  57   1              u8 num;
  58   1              switch(cod)
  59   1              {
  60   2                      case 0xee: num=0; break; 
  61   2                      case 0xde: num=1; break; 
  62   2                      case 0xbe: num=2; break; 
  63   2                      case 0x7e: num=3; break;        
  64   2                      case 0xed: num=4; break; 
  65   2                      case 0xdd: num=5; break; 
  66   2                      case 0xbd: num=6; break; 
  67   2                      case 0x7d: num=7; break;  
  68   2                      case 0xeb: num=8; break; 
  69   2                      case 0xdb: num=9; break; 
  70   2                      case 0xbb: num=10; break; 
  71   2                      case 0x7b: num=11; break;       
  72   2                      case 0xe7: num=12; break; 
  73   2                      case 0xd7: num=13; break; 
  74   2                      case 0xb7: num=14; break; 
  75   2                      case 0x77: num=15; break;
  76   2              }
  77   1              return num;
  78   1      }
  79          void main(void)
  80          {
  81   1              u8 num;
  82   1              u8 cod;
  83   1              P0 = 0xff;//端口初始化，设成输出模式
  84   1              P1 = 0xff;
  85   1              seg_sel = 0;//LE禁止锁存
  86   1              bit_sel = 0;
  87   1              while(1)
  88   1              {
  89   2              cod = key_scan();
  90   2              num = encode(cod);
  91   2               display_led(1,num);
  92   2              }
  93   1      }
*** WARNING C291 IN LINE 54 OF LED.C: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
